import cv2
from cvzone.HandTrackingModule import HandDetector
import subprocess
import time
import pyautogui

def set_vol_up():
    subprocess.run(["powershell", "-ExecutionPolicy", "Bypass", "-File", r"C:\Users\diyab\Desktop\GestureBoard\scripts\volume_increase.ps1"])

def set_vol_down():
    subprocess.run(["powershell", "-ExecutionPolicy", "Bypass", "-File", r"C:\Users\diyab\Desktop\GestureBoard\scripts\volume_decrease.ps1"])

def volume_control():
    gesture_up_time = 0
    gesture_down_time = 0
    function_delay = 1
    brightness = 50
    detector = HandDetector(detectionCon=0.6, maxHands=1)
    cap = cv2.VideoCapture(0)

    while True:
        success, image = cap.read()
        image = cv2.flip(image, 1)
        hands, image = detector.findHands(image, flipType=False)
        
        if hands:
            fingers = detector.fingersUp(hands[0])
            lmList = hands[0]['lmList']
            thumb_y = lmList[4][1]
            ind_x, ind_y = lmList[8][0], lmList[8][1]
            mid_x, mid_y = lmList[12][0], lmList[12][1]
            ring_x, ring_y = lmList[16][0], lmList[16][1]
            
            if fingers == [0, 0, 0, 0, 0]:  # All fingers down
                if gesture_up_time == 0:
                    gesture_up_time = time.time()
                elif time.time() - gesture_up_time >= function_delay:
                    set_vol_up()
                    gesture_up_time = 0  # Reset after performing the action
            else:
                gesture_up_time = 0  # Reset if the gesture is not held

            if fingers == [1, 0, 0, 0, 0]:  # Only thumb up
                if gesture_down_time == 0:
                    gesture_down_time = time.time()
                elif time.time() - gesture_down_time >= function_delay:
                    set_vol_down()
                    gesture_down_time = 0  # Reset after performing the action
            else:
                gesture_down_time = 0  # Reset if the gesture is not held

            # Brightness control gesture
            if fingers[0] == 1 and fingers[1] == 1 and fingers[2] == 1 and fingers[3] == 0 and fingers[4] == 0:
                if abs(ind_x - mid_x) < 25 and abs(mid_x - ring_x) < 25:
                    if thumb_y < ind_y:  # Up to increase brightness
                        brightness += 1
                        if brightness > 100:
                            brightness = 100
                        print(f"Brightness increased to {brightness}")
                    elif thumb_y > ind_y:  # Down to decrease brightness
                        brightness -= 1
                        if brightness < 0:
                            brightness = 0
                        print(f"Brightness decreased to {brightness}")

            # Screenshot gesture
            if fingers == [1, 1, 1, 1, 1]:  # All fingers up
                pyautogui.screenshot("image1.png")
                print("Screenshot taken")

        cv2.imshow("GestureBoard", image)
        key = cv2.waitKey(100)
        if key == 27:  # ESC key to exit
            break

    cap.release()
    cv2.destroyAllWindows()

volume_control()
